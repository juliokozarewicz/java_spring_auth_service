services:

  nginx:
    container_name: nginx
    restart: always
    build: ../infra-nginx-dockerized
    env_file:
      - .env
    ports:
      - "${NGINX_PORT}:80"
    networks:
      - spring_net

  postgres:
    container_name: postgres
    restart: always
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spring_net

  redis:
    container_name: redis
    restart: always
    env_file:
      - .env
    image: redis:latest
    command: ["redis-server", "--port", "${REDIS_PORT}", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - spring_net

  helloworld:
    container_name: helloworld
    restart: always
    build: ../helloworld
    env_file:
      - .env
    ports:
      - "${HELLOWORLD_PORT}:${HELLOWORLD_PORT}"
    networks:
      - spring_net

  documentation:
    container_name: documentation
    restart: always
    build: ../documentation
    env_file:
      - .env
    ports:
      - "${DOCUMENTATION_PORT}:${DOCUMENTATION_PORT}"
    networks:
      - spring_net

  accounts:
    container_name: accounts
    restart: always
    build: ../accounts
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    ports:
      - "${ACCOUNTS_PORT}:${ACCOUNTS_PORT}"
    networks:
      - spring_net

volumes:
  postgres_data:

networks:
  spring_net:
    driver: bridge