# service name
spring.application.name=email-management-service

# Vault Config
spring.config.import=vault://
spring.cloud.vault.uri=http://${PRIVATE_DOMAIN}:8200
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=${EMAIL_MANAGEMENT_SERVICE_VAULT_TOKEN}
spring.cloud.vault.kv.default-context=${EMAIL_MANAGEMENT_SERVICE_VAULT_CONTEXT}
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.kv.backend-version=2
spring.cloud.vault.kv.backend=${APPLICATION_TITLE}

# server
server.port=${EMAIL_SERVICE_PORT}

# logs
logging.level.root=ERROR
logging.file.name = ./src/main/resources/logs/logfile.log
logging.pattern.file=%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ}, %-5level, %file [%method], %thread, %msg%n

# email
spring.mail.host=${EMAIL_HOST}
spring.mail.port=${EMAIL_PORT}
spring.mail.username=${EMAIL_ADDRESS_USER}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${EMAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${EMAIL_START_TTLS}

# kafka
spring.kafka.bootstrap-servers=${PRIVATE_DOMAIN}:6001
spring.kafka.properties.security.protocol=SASL_PLAINTEXT
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USER}" password="${KAFKA_PASSWORD}";
spring.kafka.consumer.group-id=${EMAIL_SERVICE_BASE_URL}
spring.kafka.consumer.properties.security.protocol=SASL_PLAINTEXT
spring.kafka.consumer.properties.sasl.mechanism=PLAIN
spring.kafka.consumer.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USER}" password="${KAFKA_PASSWORD}";
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false